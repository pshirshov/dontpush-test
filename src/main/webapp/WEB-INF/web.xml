<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

    <display-name>Omnitrack Web-GUI Servlet</display-name>
    <context-param>
        <description>Vaadin production mode</description>
        <param-name>productionMode</param-name>
        <param-value>false</param-value>
    </context-param>


    <servlet>
        <description>AtmosphereServlet</description>
        <servlet-name>AtmosphereServlet</servlet-name>
        <servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
        <init-param>
            <!-- prevent deadlocks -->
            <param-name>org.atmosphere.disableOnStateEvent</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--init-param>
            <param-name>org.atmosphere.useWebSocket</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>org.atmosphere.cpr.asyncSupport</param-name>
            <param-value>org.atmosphere.container.Servlet30CometSupport</param-value>
        </init-param-->
        <init-param>
            <param-name>org.atmosphere.cpr.broadcasterCacheClass</param-name>
            <param-value>org.atmosphere.cache.HeaderBroadcasterCache</param-value>
        </init-param>
        <init-param>
            <param-name>org.atmosphere.cpr.broadcastFilterClasses</param-name>
            <param-value>org.atmosphere.client.TrackMessageSizeFilter</param-value>
        </init-param>
        <init-param>
            <param-name>org.atmosphere.cpr.sessionSupport</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>org.atmosphere.websocket.bannedVersion</param-name>
            <param-value>-1</param-value>
        </init-param>

        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>

    <servlet>
        <servlet-name>Omnitrack Web-GUI Servlet</servlet-name>
        <servlet-class>test.OtrServlet</servlet-class>
        <init-param>
            <description>Vaadin application class to start</description>
            <param-name>application</param-name>
            <param-value>test.OtrWebGuiApp</param-value>
        </init-param>
        <init-param>
            <param-name>widgetset</param-name>
            <param-value>test.gwt.WidgetSet</param-value>
        </init-param>
        <init-param>
            <description>This is optinal parameter that control the
                timeout before "Conection guard" is for end user. If you
                have lots of synchronous tasks that take long time, you might
                want to increase this value to avoid non-intentional red screens.
                Default value is 5 seconds.</description>
            <param-name>connectionGuardTimeout</param-name>
            <param-value>2</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <listener>
        <listener-class>test.OtrSessionListener</listener-class>
    </listener>

    <resource-ref>
        <description>External Spring config path</description>
        <res-ref-name>config/spring</res-ref-name>
        <res-type>java.lang.String</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>


    <servlet-mapping>
        <servlet-name>AtmosphereServlet</servlet-name>
        <url-pattern>/UIDL/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Omnitrack Web-GUI Servlet</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>

    <session-config>
        <!-- timeout in minutes -->
        <session-timeout>10</session-timeout>
    </session-config>
</web-app>
